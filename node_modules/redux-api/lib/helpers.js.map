{"version":3,"sources":["../src/helpers.js"],"names":["none","extractArgs","helperCrudFunction","defaultMiddlewareArgsParser","args","pathvars","params","callback","Function","name","cb","method","toUpperCase","dispatch","getState","CRUD","reduce","memo"],"mappings":";;;;;;;;;;QAAgBA,I,GAAAA,I;QAEAC,W,GAAAA,W;QAiBAC,kB,GAAAA,kB;QAOAC,2B,GAAAA,2B;AA1BT,SAASH,IAAT,GAAgB,CAAE;;AAElB,SAASC,WAAT,CAAqBG,IAArB,EAA2B;AAChC,MAAIC,iBAAJ;AACA,MAAIC,SAAS,EAAb;AACA,MAAIC,iBAAJ;AACA,MAAIH,KAAK,CAAL,aAAmBI,QAAvB,EAAiC;AAC/BD,eAAWH,KAAK,CAAL,CAAX;AACD,GAFD,MAEO,IAAIA,KAAK,CAAL,aAAmBI,QAAvB,EAAiC;AACtCH,eAAWD,KAAK,CAAL,CAAX;AACAG,eAAWH,KAAK,CAAL,CAAX;AACD,GAHM,MAGA;AACLC,eAAWD,KAAK,CAAL,CAAX;AACAE,aAASF,KAAK,CAAL,CAAT;AACAG,eAAWH,KAAK,CAAL,KAAWJ,IAAtB;AACD;AACD,SAAO,CAACK,QAAD,EAAWC,MAAX,EAAmBC,QAAnB,CAAP;AACD;;AAEM,SAASL,kBAAT,CAA4BO,IAA5B,EAAkC;AACvC,SAAO,YAAa;AAAA,sCAATL,IAAS;AAATA,UAAS;AAAA;;AAAA,uBACaH,YAAYG,IAAZ,CADb;AAAA;AAAA,QACXC,QADW;AAAA,QACDC,MADC;AAAA,QACOI,EADP;;AAElB,WAAO,CAACL,QAAD,eAAgBC,MAAhB,IAAwBK,QAAQF,KAAKG,WAAL,EAAhC,KAAsDF,EAAtD,CAAP;AACD,GAHD;AAID;;AAEM,SAASP,2BAAT,CAAqCU,QAArC,EAA+CC,QAA/C,EAAyD;AAC9D,SAAO,EAAED,kBAAF,EAAYC,kBAAZ,EAAP;AACD;;AAEM,IAAMC,sBAAO,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,QAAvB,EAAiC,OAAjC,EAA0CC,MAA1C,CAClB,UAACC,IAAD,EAAOR,IAAP,EAAgB;AACdQ,OAAKR,IAAL,IAAaP,mBAAmBO,IAAnB,CAAb;AACA,SAAOQ,IAAP;AACD,CAJiB,EAKlB,EALkB,CAAb","file":"helpers.js","sourcesContent":["export function none() {}\n\nexport function extractArgs(args) {\n  let pathvars;\n  let params = {};\n  let callback;\n  if (args[0] instanceof Function) {\n    callback = args[0];\n  } else if (args[1] instanceof Function) {\n    pathvars = args[0];\n    callback = args[1];\n  } else {\n    pathvars = args[0];\n    params = args[1];\n    callback = args[2] || none;\n  }\n  return [pathvars, params, callback];\n}\n\nexport function helperCrudFunction(name) {\n  return (...args) => {\n    const [pathvars, params, cb] = extractArgs(args);\n    return [pathvars, { ...params, method: name.toUpperCase() }, cb];\n  };\n}\n\nexport function defaultMiddlewareArgsParser(dispatch, getState) {\n  return { dispatch, getState };\n}\n\nexport const CRUD = [\"get\", \"post\", \"put\", \"delete\", \"patch\"].reduce(\n  (memo, name) => {\n    memo[name] = helperCrudFunction(name);\n    return memo;\n  },\n  {}\n);\n"]}