{"version":3,"sources":["../src/actionFn.js"],"names":["actionFn","url","name","options","ACTIONS","meta","actionFetch","actionSuccess","actionFail","actionReset","actionCache","actionAbort","pubsub","requestHolder","getOptions","urlT","params","getState","globalOptions","holder","Function","baseOptions","getUrl","pathvars","resultUrlT","urlOptions","rootUrl","rootUrlObject","parse","urlObject","host","urlPath","path","replace","protocol","fetch","dispatch","opts","id","reducerName","cacheManager","expire","cache","state","prefix","data","getData","undefined","Promise","resolve","response","then","type","abort","defer","pop","err","Error","reject","request","result","validation","ret","responseHandler","res","catch","fn","args","callback","syncing","push","middlewareParser","isLoading","requestOptions","prevData","fetchResolverOpts","actions","prefetch","Object","defineProperty","get","console","warn","done","fail","set","promise","transformer","d","origData","broadcast","forEach","postfetch","error","loading","reset","mutation","force","sync","isServer","server","store","modifyParams","helpers","crud","fnHelperCallback","memo","func","helpername","call","index","length","callbackFn","helpersResult","newArgs","concat","keys","reduce","key"],"mappings":"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","file":"actionFn.js","sourcesContent":["\"use strict\";\n\nimport fastApply from \"fast-apply\";\nimport libUrl from \"url\";\nimport urlTransform from \"./urlTransform\";\nimport merge from \"./utils/merge\";\nimport get from \"./utils/get\";\nimport fetchResolver from \"./fetchResolver\";\nimport PubSub from \"./PubSub\";\nimport createHolder from \"./createHolder\";\nimport {\n  none,\n  extractArgs,\n  defaultMiddlewareArgsParser,\n  CRUD\n} from \"./helpers\";\nimport { getCacheManager } from \"./utils/cache\";\n\n/**\n * Constructor for create action\n * @param  {String} url          endpoint's url\n * @param  {String} name         action name\n * @param  {Object} options      action configuration\n * @param  {Object} ACTIONS      map of actions\n * @param  {[type]} fetchAdapter adapter for fetching data\n * @return {Function+Object}     action function object\n */\nexport default function actionFn(url, name, options, ACTIONS = {}, meta = {}) {\n  const {\n    actionFetch,\n    actionSuccess,\n    actionFail,\n    actionReset,\n    actionCache,\n    actionAbort\n  } = ACTIONS;\n  const pubsub = new PubSub();\n  const requestHolder = createHolder();\n\n  function getOptions(urlT, params, getState) {\n    const globalOptions = !meta.holder\n      ? {}\n      : meta.holder.options instanceof Function\n        ? meta.holder.options(urlT, params, getState)\n        : meta.holder.options;\n    const baseOptions = !(options instanceof Function)\n      ? options\n      : options(urlT, params, getState);\n    return merge({}, globalOptions, baseOptions, params);\n  }\n\n  function getUrl(pathvars, params, getState) {\n    const resultUrlT = urlTransform(url, pathvars, meta.urlOptions);\n    let urlT = resultUrlT;\n    let rootUrl = get(meta, \"holder\", \"rootUrl\");\n    rootUrl = !(rootUrl instanceof Function)\n      ? rootUrl\n      : rootUrl(urlT, params, getState);\n    if (rootUrl) {\n      const rootUrlObject = libUrl.parse(rootUrl);\n      const urlObject = libUrl.parse(urlT);\n      if (!urlObject.host) {\n        const urlPath =\n          (rootUrlObject.path ? rootUrlObject.path.replace(/\\/$/, \"\") : \"\") +\n          \"/\" +\n          (urlObject.path ? urlObject.path.replace(/^\\//, \"\") : \"\");\n        urlT = `${rootUrlObject.protocol}//${rootUrlObject.host}${urlPath}`;\n      }\n    }\n    return urlT;\n  }\n\n  function fetch(\n    pathvars,\n    params,\n    options = {},\n    getState = none,\n    dispatch = none\n  ) {\n    const urlT = getUrl(pathvars, params, getState);\n    const opts = getOptions(urlT, params, getState);\n    let id = meta.reducerName || \"\";\n    const cacheManager = getCacheManager(options.expire, meta.cache);\n\n    if (cacheManager && getState !== none) {\n      const state = getState();\n      const cache = get(state, meta.prefix, meta.reducerName, \"cache\");\n      id += \"_\" + cacheManager.id(pathvars, params);\n      const data = cacheManager.getData(\n        cache && id && cache[id] !== undefined && cache[id]\n      );\n      if (data !== undefined) {\n        return Promise.resolve(data);\n      }\n    }\n    const response = meta.fetch(urlT, opts);\n    if (cacheManager && dispatch !== none && id) {\n      response.then(data => {\n        dispatch({ type: actionCache, id, data, expire: cacheManager.expire });\n      });\n    }\n    return response;\n  }\n\n  function abort() {\n    const defer = requestHolder.pop();\n    const err = new Error(\"Application abort request\");\n    defer && defer.reject(err);\n    return err;\n  }\n\n  /**\n   * Fetch data from server\n   * @param  {Object}   pathvars    path vars for url\n   * @param  {Object}   params      fetch params\n   * @param  {Function} getState    helper meta function\n   */\n  function request(\n    pathvars,\n    params,\n    options,\n    getState = none,\n    dispatch = none\n  ) {\n    const response = fetch(pathvars, params, options, getState, dispatch);\n    const result = !meta.validation\n      ? response\n      : response.then(\n          data =>\n            new Promise((resolve, reject) =>\n              meta.validation(data, err => (err ? reject(err) : resolve(data)))\n            )\n        );\n    let ret = result;\n    const responseHandler = get(meta, \"holder\", \"responseHandler\");\n    if (responseHandler) {\n      if (result && result.then) {\n        ret = result.then(\n          data => {\n            const res = responseHandler(null, data);\n            if (res === undefined) {\n              return data;\n            } else {\n              return res;\n            }\n          },\n          err => responseHandler(err)\n        );\n      } else {\n        ret = responseHandler(result);\n      }\n    }\n    ret && ret.catch && ret.catch(none);\n    return ret;\n  }\n\n  /**\n   * Fetch data from server\n   * @param  {Object}   pathvars    path vars for url\n   * @param  {Object}   params      fetch params\n   * @param  {Function} callback)   callback execute after end request\n   */\n  function fn(...args) {\n    const [pathvars, params, callback] = extractArgs(args);\n    const syncing = params ? !!params.syncing : false;\n    params && delete params.syncing;\n    pubsub.push(callback);\n    return (...middlewareArgs) => {\n      const middlewareParser =\n        get(meta, \"holder\", \"middlewareParser\") || defaultMiddlewareArgsParser;\n      const { dispatch, getState } = middlewareParser(...middlewareArgs);\n      const state = getState();\n      const isLoading = get(state, meta.prefix, meta.reducerName, \"loading\");\n      if (isLoading) {\n        return Promise.reject(\"isLoading\");\n      }\n      const requestOptions = { pathvars, params };\n      const prevData = get(state, meta.prefix, meta.reducerName, \"data\");\n      dispatch({ type: actionFetch, syncing, request: requestOptions });\n      const fetchResolverOpts = {\n        dispatch,\n        getState,\n        request: requestOptions,\n        actions: meta.actions,\n        prefetch: meta.prefetch\n      };\n      if (Object.defineProperty) {\n        Object.defineProperty(fetchResolverOpts, \"requestOptions\", {\n          get() {\n            /* eslint no-console: 0 */\n            console.warn(\"Deprecated option, use `request` option\");\n            return requestOptions;\n          }\n        });\n      } else {\n        fetchResolverOpts.requestOptions = requestOptions;\n      }\n\n      const result = new Promise((done, fail) => {\n        fetchResolver(0, fetchResolverOpts, err => {\n          if (err) {\n            pubsub.reject(err);\n            return fail(err);\n          }\n          new Promise((resolve, reject) => {\n            requestHolder.set({\n              resolve,\n              reject,\n              promise: request(pathvars, params, {}, getState, dispatch).then(\n                resolve,\n                reject\n              )\n            });\n          }).then(\n            d => {\n              requestHolder.pop();\n              const data = meta.transformer(d, prevData, {\n                type: actionSuccess,\n                request: requestOptions\n              });\n              dispatch({\n                data,\n                origData: d,\n                type: actionSuccess,\n                syncing: false,\n                request: requestOptions\n              });\n              if (meta.broadcast) {\n                meta.broadcast.forEach(type => {\n                  dispatch({\n                    type,\n                    data,\n                    origData: d,\n                    request: requestOptions\n                  });\n                });\n              }\n              if (meta.postfetch) {\n                meta.postfetch.forEach(postfetch => {\n                  postfetch instanceof Function &&\n                    postfetch({\n                      data,\n                      getState,\n                      dispatch,\n                      actions: meta.actions,\n                      request: requestOptions\n                    });\n                });\n              }\n              pubsub.resolve(data);\n              done(data);\n            },\n            error => {\n              dispatch({\n                error,\n                type: actionFail,\n                loading: false,\n                syncing: false,\n                request: requestOptions\n              });\n              pubsub.reject(error);\n              fail(error);\n            }\n          );\n        });\n      });\n      result.catch(none);\n      return result;\n    };\n  }\n\n  /*\n    Pure rest request\n   */\n  fn.request = function(pathvars, params, options) {\n    return request(pathvars, params, options || {});\n  };\n\n  /**\n   * Reset store to initial state\n   */\n  fn.reset = mutation => {\n    abort();\n    return mutation === \"sync\"\n      ? { type: actionReset, mutation }\n      : { type: actionReset };\n  };\n\n  /*\n    Abort request\n   */\n  fn.abort = function() {\n    const error = abort();\n    return { type: actionAbort, error };\n  };\n\n  fn.force = function(...args) {\n    return (dispatch, getState) => {\n      const state = getState();\n      const isLoading = get(state, meta.prefix, meta.reducerName, \"loading\");\n      if (isLoading) {\n        dispatch(fn.abort());\n      }\n      return fn(...args)(dispatch, getState);\n    };\n  };\n\n  /**\n   * Sync store with server. In server mode works as usual method.\n   * If data have already synced, data would not fetch after call this method.\n   * @param  {Object} pathvars    path vars for url\n   * @param  {Object} params      fetch params\n   * @param  {Function} callback) callback execute after end request\n   */\n  fn.sync = (...args) => {\n    const [pathvars, params, callback] = extractArgs(args);\n    const isServer = meta.holder ? meta.holder.server : false;\n    return (dispatch, getState) => {\n      const state = getState();\n      const store = state[name];\n      if (!isServer && store && store.sync) {\n        callback(null, store.data);\n        return;\n      }\n      const modifyParams = { ...params, syncing: true };\n      return fn(pathvars, modifyParams, callback)(dispatch, getState);\n    };\n  };\n\n  let helpers = meta.helpers || {};\n  if (meta.crud) {\n    helpers = { ...CRUD, ...helpers };\n  }\n  const fnHelperCallback = (memo, func, helpername) => {\n    if (memo[helpername]) {\n      throw new Error(\n        `Helper name: \"${helpername}\" for endpoint \"${name}\" has been already reserved`\n      );\n    }\n    const { sync, call } = func instanceof Function ? { call: func } : func;\n    memo[helpername] = (...args) => (dispatch, getState) => {\n      const index = args.length - 1;\n      const callbackFn = args[index] instanceof Function ? args[index] : none;\n      const helpersResult = fastApply(\n        call,\n        { getState, dispatch, actions: meta.actions },\n        args\n      );\n      const result = new Promise((resolve, reject) => {\n        const callback = (err, data) => {\n          err ? reject(err) : resolve(data);\n          callbackFn(err, data);\n        };\n        // If helper alias using async functionality\n        if (helpersResult instanceof Function) {\n          helpersResult((error, newArgs = []) => {\n            if (error) {\n              callback(error);\n            } else {\n              fastApply(sync ? fn.sync : fn, null, newArgs.concat(callback))(\n                dispatch,\n                getState\n              );\n            }\n          });\n        } else {\n          // if helper alias is synchronous\n          const [pathvars, params] = helpersResult;\n          fastApply(sync ? fn.sync : fn, null, [pathvars, params, callback])(\n            dispatch,\n            getState\n          );\n        }\n      });\n      result.catch(none);\n      return result;\n    };\n    return memo;\n  };\n\n  return Object.keys(helpers).reduce(\n    (memo, key) => fnHelperCallback(memo, helpers[key], key, helpers),\n    fn\n  );\n}\n"]}