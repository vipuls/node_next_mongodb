{"version":3,"sources":["../../src/utils/merge.js"],"names":["mergePair","args","length","reduce","toString","Object","prototype","OBJECT","ARRAY","a","b","aType","call","bType","concat","keys","memo","key"],"mappings":";;;;;QAKgBA,S,GAAAA,S;;kBAyBD,YAAkB;AAAA,oCAANC,IAAM;AAANA,QAAM;AAAA;;AAC/B,SAAOA,KAAKC,MAAL,GAAcD,KAAKE,MAAL,CAAYH,SAAZ,CAAd,GAAuC,IAA9C;AACD,C;;AAhCD;AACA,IAAMI,WAAWC,OAAOC,SAAP,CAAiBF,QAAlC;AACA,IAAMG,SAAS,iBAAf;AACA,IAAMC,QAAQ,gBAAd;;AAEO,SAASR,SAAT,CAAmBS,CAAnB,EAAsBC,CAAtB,EAAyB;AAC9B,MAAID,MAAM,KAAK,CAAf,EAAkB;AAChB,WAAOC,CAAP;AACD;AACD,MAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB,WAAOD,CAAP;AACD;;AAED,MAAME,QAAQP,SAASQ,IAAT,CAAcH,CAAd,CAAd;AACA,MAAMI,QAAQT,SAASQ,IAAT,CAAcF,CAAd,CAAd;AACA,MAAIC,UAAUH,KAAd,EAAqB;AACnB,WAAOC,EAAEK,MAAF,CAASJ,CAAT,CAAP;AACD;AACD,MAAIG,UAAUL,KAAd,EAAqB;AACnB,WAAO,CAACC,CAAD,EAAIK,MAAJ,CAAWJ,CAAX,CAAP;AACD;AACD,MAAIC,UAAUJ,MAAV,IAAoBM,UAAUN,MAAlC,EAA0C;AACxC,WAAOG,CAAP;AACD;AACD,SAAOL,OAAOU,IAAP,CAAYL,CAAZ,EAAeP,MAAf,CAAsB,UAACa,IAAD,EAAOC,GAAP,EAAe;AAC1CD,SAAKC,GAAL,IAAYjB,UAAUS,EAAEQ,GAAF,CAAV,EAAkBP,EAAEO,GAAF,CAAlB,CAAZ;AACA,WAAOD,IAAP;AACD,GAHM,EAGJP,CAHI,CAAP;AAID","file":"merge.js","sourcesContent":["/* eslint no-void: 0 */\nconst toString = Object.prototype.toString;\nconst OBJECT = \"[object Object]\";\nconst ARRAY = \"[object Array]\";\n\nexport function mergePair(a, b) {\n  if (a === void 0) {\n    return b;\n  }\n  if (b === void 0) {\n    return a;\n  }\n\n  const aType = toString.call(a);\n  const bType = toString.call(b);\n  if (aType === ARRAY) {\n    return a.concat(b);\n  }\n  if (bType === ARRAY) {\n    return [a].concat(b);\n  }\n  if (aType !== OBJECT || bType !== OBJECT) {\n    return b;\n  }\n  return Object.keys(b).reduce((memo, key) => {\n    memo[key] = mergePair(a[key], b[key]);\n    return memo;\n  }, a);\n}\n\nexport default function(...args) {\n  return args.length ? args.reduce(mergePair) : null;\n}\n"]}