{"version":3,"sources":["../src/index.js"],"names":["reduxApi","defaultEndpointConfig","transformer","object","PREFIX","config","baseConfig","fetchHolder","fetch","server","rootUrl","middlewareParser","options","responseHandler","cfg","use","key","value","init","isServer","console","warn","actions","reducers","events","fnConfigCallback","memo","opts","reducerName","url","broadcast","urlOptions","crud","prefetch","postfetch","validation","helpers","prefix","ACTIONS","actionFetch","actionSuccess","actionFail","actionReset","actionCache","actionAbort","args","apply","meta","holder","virtual","cache","data","sync","syncing","loading","initialState","request","reducer","bind","Object","keys","reduce","transformers","async"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\n\n/* eslint no-void: 0 */\n\nimport reducerFn from \"./reducerFn\";\nimport actionFn from \"./actionFn\";\nimport transformers from \"./transformers\";\nimport async from \"./async\";\nimport cacheManager from \"./utils/cache\";\n// export { transformers, async };\n\n/**\n * Default configuration for each endpoint\n * @type {Object}\n */\nconst defaultEndpointConfig = {\n  transformer: transformers.object\n};\n\nconst PREFIX = \"@@redux-api\";\n/**\n * Entry api point\n * @param {Object} config Rest api configuration\n * @param {Object} baseConfig baseConfig settings for Rest api\n * @param {Function} fetch Adapter for rest requests\n * @param {Boolean} isServer false by default (fif you want to use it for isomorphic apps)\n * @return {actions, reducers}        { actions, reducers}\n * @example ```js\n *   const api = reduxApi({\n *     test: \"/plain/url\",\n *     testItem: \"/plain/url/:id\",\n *     testModify: {\n *       url: \"/plain/url/:endpoint\",\n\n *       transformer: (data)=> !data ?\n *          { title: \"\", message: \"\" } :\n *          { title: data.title, message: data.message },\n *       options: {\n *         method: \"post\"\n *         headers: {\n *           \"Accept\": \"application/json\",\n *           \"Content-Type\": \"application/json\"\n *         }\n *       }\n *     }\n *   });\n *   // register reducers\n *\n *   // call actions\n *   dispatch(api.actions.test());\n *   dispatch(api.actions.testItem({id: 1}));\n *   dispatch(api.actions.testModify({endpoint: \"upload-1\"}, {\n *     body: JSON.stringify({title: \"Hello\", message: \"World\"})\n *   }));\n * ```\n */\n\nexport default function reduxApi(config, baseConfig) {\n  config || (config = {});\n\n  const fetchHolder = {\n    fetch: null,\n    server: false,\n    rootUrl: null,\n    middlewareParser: null,\n    options: {},\n    responseHandler: null\n  };\n\n  const cfg = {\n    use(key, value) {\n      fetchHolder[key] = value;\n\n      return this;\n    },\n    init(fetch, isServer = false, rootUrl) {\n      /* eslint no-console: 0 */\n      console.warn(\"Deprecated method, use `use` method\");\n      this.use(\"fetch\", fetch);\n      this.use(\"server\", isServer);\n      this.use(\"rootUrl\", rootUrl);\n      return this;\n    },\n    actions: {},\n    reducers: {},\n    events: {}\n  };\n  function fnConfigCallback(memo, value, key) {\n    const opts =\n      typeof value === \"object\"\n        ? { ...defaultEndpointConfig, reducerName: key, ...value }\n        : { ...defaultEndpointConfig, reducerName: key, url: value };\n\n    if (opts.broadcast !== void 0) {\n      /* eslint no-console: 0 */\n      console.warn(\n        \"Deprecated `broadcast` option. you shoud use `events`\" +\n          \"to catch redux-api events (see https://github.com/lexich/redux-api/blob/master/DOCS.md#Events)\"\n      );\n    }\n\n    const {\n      url,\n      urlOptions,\n      options,\n      transformer,\n      broadcast,\n      crud,\n      reducerName,\n      prefetch,\n      postfetch,\n      validation,\n      helpers\n    } = opts;\n\n    const prefix = (baseConfig && baseConfig.prefix) || \"\";\n\n    const ACTIONS = {\n      actionFetch: `${PREFIX}@${prefix}${reducerName}`,\n      actionSuccess: `${PREFIX}@${prefix}${reducerName}_success`,\n      actionFail: `${PREFIX}@${prefix}${reducerName}_fail`,\n      actionReset: `${PREFIX}@${prefix}${reducerName}_delete`,\n      actionCache: `${PREFIX}@${prefix}${reducerName}_cache`,\n      actionAbort: `${PREFIX}@${prefix}${reducerName}_abort`\n    };\n\n    const fetch = opts.fetch\n      ? opts.fetch\n      : function(...args) {\n          return fetchHolder.fetch.apply(this, args);\n        };\n\n    const meta = {\n      holder: fetchHolder,\n      virtual: !!opts.virtual,\n      actions: memo.actions,\n      cache: cacheManager(opts.cache),\n      urlOptions,\n      fetch,\n      broadcast,\n      reducerName,\n      prefetch,\n      postfetch,\n      validation,\n      helpers,\n      transformer,\n      prefix,\n      crud\n    };\n\n    memo.actions[key] = actionFn(url, key, options, ACTIONS, meta);\n\n    if (!meta.virtual && !memo.reducers[reducerName]) {\n      const data = transformer();\n      const sync = false;\n      const syncing = false;\n      const loading = false;\n      const initialState = opts.cache\n        ? { sync, syncing, loading, data, cache: {}, request: null }\n        : { sync, syncing, loading, data, request: null };\n\n      const reducer = opts.reducer ? opts.reducer.bind(memo) : null;\n      memo.reducers[reducerName] = reducerFn(initialState, ACTIONS, reducer);\n    }\n    memo.events[reducerName] = ACTIONS;\n    return memo;\n  }\n\n  return Object.keys(config).reduce(\n    (memo, key) => fnConfigCallback(memo, config[key], key, config),\n    cfg\n  );\n}\n\nreduxApi.transformers = transformers;\nreduxApi.async = async;\n"]}