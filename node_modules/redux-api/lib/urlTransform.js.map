{"version":3,"sources":["../src/urlTransform.js"],"names":["urlTransform","rxClean","url","params","options","usedKeys","urlWithParams","Object","keys","reduce","key","value","rx","RegExp","replace","_","_1","slash","protocol","host","path","cleanURL","usedKeysArray","length","urlObject","split","arrayFormat","delimiter","qsParseOptions","mergeParams","parse","qsStringifyOptions","urlStringParams","stringify"],"mappings":"AAAA;;;;;;;;kBAkBwBA,Y;;AAhBxB;;;;AACA;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAMC,UAAU,2BAAhB;;AAEA;;;;;;;;AAQe,SAASD,YAAT,CAAsBE,GAAtB,EAA2BC,MAA3B,EAAmCC,OAAnC,EAA4C;AACzD,MAAI,CAACF,GAAL,EAAU;AACR,WAAO,EAAP;AACD;AACDC,aAAWA,SAAS,EAApB;AACA,MAAME,WAAW,EAAjB;AACA,MAAMC,gBAAgBC,OAAOC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,CAA2B,UAACP,GAAD,EAAMQ,GAAN,EAAc;AAC7D,QAAMC,QAAQR,OAAOO,GAAP,CAAd;AACA,QAAME,KAAK,IAAIC,MAAJ,WAAmBH,GAAnB,aAA8BA,GAA9B,YAA2C,GAA3C,CAAX;AACA,WAAOR,IAAIY,OAAJ,CAAYF,EAAZ,EAAgB,UAACG,CAAD,EAAIC,EAAJ,EAAQC,KAAR,EAAkB;AACvCZ,eAASK,GAAT,IAAgBC,KAAhB;AACA,aAAOA,QAAQA,QAAQM,KAAhB,GAAwBN,KAA/B;AACD,KAHM,CAAP;AAID,GAPqB,EAOnBT,GAPmB,CAAtB;;AASA,MAAI,CAACI,aAAL,EAAoB;AAClB,WAAOA,aAAP;AACD;;AAjBwD,eAkBxB,gBAAMA,aAAN,CAlBwB;AAAA,MAkBjDY,QAlBiD,UAkBjDA,QAlBiD;AAAA,MAkBvCC,IAlBuC,UAkBvCA,IAlBuC;AAAA,MAkBjCC,IAlBiC,UAkBjCA,IAlBiC;;AAmBzD,MAAMC,WAAWF,OACVD,QADU,UACGC,IADH,GACUC,KAAKN,OAAL,CAAab,OAAb,EAAsB,EAAtB,CADV,GAEbmB,KAAKN,OAAL,CAAab,OAAb,EAAsB,EAAtB,CAFJ;AAGA,MAAMqB,gBAAgBf,OAAOC,IAAP,CAAYH,QAAZ,CAAtB;AACA,MAAIiB,cAAcC,MAAd,KAAyBhB,OAAOC,IAAP,CAAYL,MAAZ,EAAoBoB,MAAjD,EAAyD;AACvD,QAAMC,YAAYH,SAASI,KAAT,CAAe,GAAf,CAAlB;AACArB,gBAAYA,UAAU,EAAtB;AAFuD,mBAGpBA,OAHoB;AAAA,QAG/CsB,WAH+C,YAG/CA,WAH+C;AAAA,QAGlCC,SAHkC,YAGlCA,SAHkC;;AAIvD,QAAMC;AACJF,8BADI;AAEJC;AAFI,OAGDvB,QAAQwB,cAHP,CAAN;AAKA,QAAMC,cAAc,qBAClBL,UAAU,CAAV,KAAgB,aAAGM,KAAH,CAASN,UAAU,CAAV,CAAT,EAAuBI,cAAvB,CADE,EAElB,oBAAKzB,MAAL,EAAamB,aAAb,CAFkB,CAApB;AAIA,QAAMS;AACJL,8BADI;AAEJC;AAFI,OAGDvB,QAAQ2B,kBAHP,CAAN;AAKA,QAAMC,kBAAkB,aAAGC,SAAH,CAAaJ,WAAb,EAA0BE,kBAA1B,CAAxB;AACA,WAAUP,UAAU,CAAV,CAAV,SAA0BQ,eAA1B;AACD;AACD,SAAOX,QAAP;AACD","file":"urlTransform.js","sourcesContent":["\"use strict\";\n\nimport qs from \"qs\";\nimport { parse } from \"url\";\nimport omit from \"./utils/omit\";\nimport merge from \"./utils/merge\";\n\n/* eslint no-useless-escape: 0 */\nconst rxClean = /(\\(:[^\\)]+\\)|:[^\\/]+\\/?)/g;\n\n/**\n * Url modification\n * @param  {String} url     url template\n * @param  {Object} params  params for url template\n * @param  {Object} options transformation options, accepts +delimiter+, +arrayFormat+,\n *                          +qsStringifyOptions+ and +qsParseOptions+\n * @return {String}         result url\n */\nexport default function urlTransform(url, params, options) {\n  if (!url) {\n    return \"\";\n  }\n  params || (params = {});\n  const usedKeys = {};\n  const urlWithParams = Object.keys(params).reduce((url, key) => {\n    const value = params[key];\n    const rx = new RegExp(`(\\\\(:${key}\\\\)|:${key})(\\/?)`, \"g\");\n    return url.replace(rx, (_, _1, slash) => {\n      usedKeys[key] = value;\n      return value ? value + slash : value;\n    });\n  }, url);\n\n  if (!urlWithParams) {\n    return urlWithParams;\n  }\n  const { protocol, host, path } = parse(urlWithParams);\n  const cleanURL = host\n    ? `${protocol}//${host}${path.replace(rxClean, \"\")}`\n    : path.replace(rxClean, \"\");\n  const usedKeysArray = Object.keys(usedKeys);\n  if (usedKeysArray.length !== Object.keys(params).length) {\n    const urlObject = cleanURL.split(\"?\");\n    options || (options = {});\n    const { arrayFormat, delimiter } = options;\n    const qsParseOptions = {\n      arrayFormat,\n      delimiter,\n      ...options.qsParseOptions\n    };\n    const mergeParams = merge(\n      urlObject[1] && qs.parse(urlObject[1], qsParseOptions),\n      omit(params, usedKeysArray)\n    );\n    const qsStringifyOptions = {\n      arrayFormat,\n      delimiter,\n      ...options.qsStringifyOptions\n    };\n    const urlStringParams = qs.stringify(mergeParams, qsStringifyOptions);\n    return `${urlObject[0]}?${urlStringParams}`;\n  }\n  return cleanURL;\n}\n"]}